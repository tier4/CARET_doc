name: reusable-remove-docs

on:
  workflow_call:
    inputs:
      script-ref:
        required: true
        type: string
      mkdocs-yaml:
        required: true
        type: string
      version-name:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  remove-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Fetch with depth=0 to push to gh-pages
          fetch-depth: 0

      - name: Install MkDocs
        run: |
          curl -fsSL -o mkdocs-requirements.txt \
            https://raw.githubusercontent.com/tier4/CARET_doc/${{ inputs.script-ref }}/.github/mkdocs-requirements.txt
          python3 -m pip install --upgrade pip setuptools wheel
          pip3 install -r mkdocs-requirements.txt

      - name: Set git config
        run: |
          git config --local --unset-all http.https://github.com/.extraheader || true
          git config --global url.https://x-access-token:${{ secrets.token }}@github.com.insteadOf 'https://github.com'
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      - name: List versions
        id: list-versions
        run: |
          echo ::set-output name=versions::$(mike list -F ${{ inputs.mkdocs-yaml }})
          echo ::set-output name=has-version::$(mike list -F ${{ inputs.mkdocs-yaml }} | grep "^${{ inputs.version-name }}$")

      - name: Show result
        run: |
          echo "versions: ${{ steps.list-versions.outputs.versions }}"
          echo "has-version: ${{ steps.list-versions.outputs.has-version }}"

      - name: Delete
        if: ${{ steps.list-versions.outputs.has-version != '' }}
        run: |
          git fetch
          mike delete -F ${{ inputs.mkdocs-yaml }} --push --rebase ${{ inputs.version-name }}
