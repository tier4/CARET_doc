name: reusable-generate-docs

on:
  workflow_call:
    inputs:
      script-ref:
        required: true
        type: string
      mkdocs-yaml:
        required: true
        type: string
      version-name:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Fetch with depth=0 to push to gh-pages
          fetch-depth: 0

      - name: Install MkDocs
        run: |
          curl -fsSL -o mkdocs-requirements.txt \
            https://raw.githubusercontent.com/tier4/CARET_doc/${{ inputs.script-ref }}/.github/mkdocs-requirements.txt
          python3 -m pip install --upgrade pip setuptools wheel
          pip3 install -r mkdocs-requirements.txt

      - name: Remove non-document files
        run: |
          find . -type f \
              -not -path './.git/*' \
              -not -path './.github/*' \
              -not -path './${{ inputs.mkdocs-yaml }}' \
              -not -name '*.md' \
              -not -name '*.svg' \
              -not -name '*.png' \
              -not -name '*.css' \
            | xargs -I {} rm "{}"

      - name: Build MkDocs
        run: |
          mkdocs build -f ${{ inputs.mkdocs-yaml }} --verbose --clean

      - name: Set git config
        run: |
          git config --local --unset-all http.https://github.com/.extraheader || true
          git config --global url.https://x-access-token:${{ secrets.token }}@github.com.insteadOf 'https://github.com'
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      - name: Deploy
        run: |
          git fetch
          mike deploy -F ${{ inputs.mkdocs-yaml }} --push --rebase ${{ inputs.version-name }}

  update-pr-commnet:
    needs: generate-docs
    if: ${{ github.event.pull_request }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Fetch with depth=0 to find modified files
          fetch-depth: 0

      - name: Retrieve create-doc-comment script
        run: |
          curl -fsSL -o create-doc-comment.sh \
            https://raw.githubusercontent.com/tier4/CARET_doc/${{ inputs.script-ref }}/.github/create-doc-comment.sh
          chmod +x create-doc-comment.sh

      - name: Create comment body
        id: create-comment-body
        run: |
          site_url=$(grep -oP "site_url:\s+\K(.*)" ${{ inputs.mkdocs-yaml }})
          base_url="${site_url}/pr-${{ github.event.pull_request.number }}/"
          ./create-doc-comment.sh "${base_url}" "origin/${{ github.event.pull_request.base.ref }}"

      - name: Find PR comment
        id: find-comment
        uses: peter-evans/find-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Documentation

      - name: Update PR comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          token: ${{ secrets.token }}
          body: |
            ${{ steps.create-comment-body.outputs.comment-body }}
          edit-mode: replace
